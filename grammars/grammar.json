{
  "scopeName": "source.rho",
  "name": "rholang",
  "fileTypes": [
    "rho"
  ],
  "foldingStartMarker": "{",
  "foldingStopMarker": "}",
  "patterns": [
    { "include": "#lineComment"},
    { "include": "#blockComment"},
    { "include": "#constants"},
    { "include": "#processes"},
    { "include": "#primitive"}

  ],
  "repository": {
    "lineComment": {
       "match": "//",
       "name": "comment.line.double-slash.rholang"
     },
    "blockComment": {
      "begin": "\/\\*",
      "name": "comment.block.rholang",
      "end": "\\*\/"
    },
    "processes": {

      "patterns": [
        { "include": "$self"},
        { "match": "\\bNil\\b",
          "name": "constant.language.rholang"},
        { "begin": "(Nils)(.*?)(Values)",
          "name": "entity.function.process.rholang",
          "beginCaptures":{
            "0": {"name": "entity.other.nil.rholang"},
            "1": {"name": "constant.language.rholang"},
            "2": {"name": "constant.language.rholang"}
          },
          "end": "(a) (b) (d)",
          "endCaptures":{
            "0": {"name":"invalid.illegal.rholang"},
            "1": {"name":"invalid.illegal.rholang"},
            "2": {"name": "constant.language.rholang"}
          }
        }

      ]
    },
    "primitive": {
      "patterns": [
        { "match": "\\b(true|false)\\b",
          "name": "constant.language.bool.rholang"
        },
        { "match": "\\d+",
          "name": "constant.numeric.rholang"
        },
        { "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.rholang"
        },
        { "begin": "'",
          "end": "'",
          "name": "string.quoted.single.rholang"
        },
        { "begin": "`",
          "end": "`",
          "name": "constant.language.datetime.rholang"
        }
      ]

    },
    "binop": {

    },
    "unop": {

    }


  }
}
